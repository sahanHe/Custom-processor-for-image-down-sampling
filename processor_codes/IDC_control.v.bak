module IDC_control(input [1:0] IDC_enable,
						 input [3:0] IDC_register,
						 output reg [7:0] IDC_control_RRR,
						 output reg [7:0] IDC_control_RWR,
						 output reg [7:0] IDC_control_CRR,
						 output reg [7:0] IDC_control_CWR,
						 input clock);
						
always@(posedge clk)
begin
	case(IDC_enable)
	2'b00:
		begin
			IDC_control_RRR <= IDC_control_RRR; 
			IDC_control_RWR <= IDC_control_RWR;
			IDC_control_CRR <= IDC_control_CRR;
			IDC_control_CWR <= IDC_control_CWR;
		end
	2'b01:
		begin
			case(IDC_register)
			begin
			4'b1001:
				begin
					IDC_control_RRR <= IDC_control_RRR + 1; 
					IDC_control_RWR <= IDC_control_RWR;
					IDC_control_CRR <= IDC_control_CRR;
					IDC_control_CWR <= IDC_control_CWR;
				end
			4'b1010:
				begin
					IDC_control_RRR <= IDC_control_RRR; 
					IDC_control_RWR <= IDC_control_RWR;
					IDC_control_CRR <= IDC_control_CRR + 1;
					IDC_control_CWR <= IDC_control_CWR;
				end
			4'b1011:
				begin
					IDC_control_RRR <= IDC_control_RRR; 
					IDC_control_RWR <= IDC_control_RWR + 1;
					IDC_control_CRR <= IDC_control_CRR;
					IDC_control_CWR <= IDC_control_CWR;
				end
			4'b1011:
				begin
					IDC_control_RRR <= IDC_control_RRR; 
					IDC_control_RWR <= IDC_control_RWR;
					IDC_control_CRR <= IDC_control_CRR;
					IDC_control_CWR <= IDC_control_CWR + 1;
				end
			default:
				begin
					IDC_control_RRR <= IDC_control_RRR; 
					IDC_control_RWR <= IDC_control_RWR;
					IDC_control_CRR <= IDC_control_CRR;
					IDC_control_CWR <= IDC_control_CWR;
				end
			endcase
	2'b10:
		begin
			case(IDC_register)
			begin
			4'b1001:
				begin
					IDC_control_RRR <= IDC_control_RRR - 1; 
					IDC_control_RWR <= IDC_control_RWR;
					IDC_control_CRR <= IDC_control_CRR;
					IDC_control_CWR <= IDC_control_CWR;
				end
			4'b1010:
				begin
					IDC_control_RRR <= IDC_control_RRR; 
					IDC_control_RWR <= IDC_control_RWR;
					IDC_control_CRR <= IDC_control_CRR - 1;
					IDC_control_CWR <= IDC_control_CWR;
				end
			4'b1011:
				begin
					IDC_control_RRR <= IDC_control_RRR; 
					IDC_control_RWR <= IDC_control_RWR - 1;
					IDC_control_CRR <= IDC_control_CRR;
					IDC_control_CWR <= IDC_control_CWR;
				end
			4'b1011:
				begin
					IDC_control_RRR <= IDC_control_RRR; 
					IDC_control_RWR <= IDC_control_RWR;
					IDC_control_CRR <= IDC_control_CRR;
					IDC_control_CWR <= IDC_control_CWR - 1;
				end
			default:
				begin
					IDC_control_RRR <= IDC_control_RRR; 
					IDC_control_RWR <= IDC_control_RWR;
					IDC_control_CRR <= IDC_control_CRR;
					IDC_control_CWR <= IDC_control_CWR;
				end
			endcase
	2'b11:
		begin
			case(IDC_register)
			begin
			4'b1001:
				begin
					IDC_control_RRR <= 8'b0; 
					IDC_control_RWR <= IDC_control_RWR;
					IDC_control_CRR <= IDC_control_CRR;
					IDC_control_CWR <= IDC_control_CWR;
				end
			4'b1010:
				begin
					IDC_control_RRR <= IDC_control_RRR; 
					IDC_control_RWR <= IDC_control_RWR;
					IDC_control_CRR <= 8'b0;
					IDC_control_CWR <= IDC_control_CWR;
				end
			4'b1011:
				begin
					IDC_control_RRR <= IDC_control_RRR; 
					IDC_control_RWR <= 8'b0;
					IDC_control_CRR <= IDC_control_CRR;
					IDC_control_CWR <= IDC_control_CWR;
				end
			4'b1011:
				begin
					IDC_control_RRR <= IDC_control_RRR; 
					IDC_control_RWR <= IDC_control_RWR;
					IDC_control_CRR <= IDC_control_CRR;
					IDC_control_CWR <= 8'b0;
				end
			default:
				begin
					IDC_control_RRR <= IDC_control_RRR; 
					IDC_control_RWR <= IDC_control_RWR;
					IDC_control_CRR <= IDC_control_CRR;
					IDC_control_CWR <= IDC_control_CWR;
				end
			endcase
	default:
		begin
			IDC_control_RRR <= IDC_control_RRR; 
			IDC_control_RWR <= IDC_control_RWR;
			IDC_control_CRR <= IDC_control_CRR;
			IDC_control_CWR <= IDC_control_CWR;
		end
	endcase
end		
		
endmodule